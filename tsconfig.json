{
  "compilerOptions": {
    "target": "esnext",                                     /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": [
      "dom",
      "ES2021"
    ],                                                   /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "react",                                      /* Specify what JSX code is generated. */
    "reactNamespace": "Creact",                               /* Specify the object invoked for `createElement`. This only applies when targeting `react` JSX emit. */
    "module": "commonjs",                                  /* Specify what module code is generated. */
    "moduleResolution": "node",                         /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": ".",                                     /* Specify the base directory to resolve non-relative module names. */
    "typeRoots": [
      "./node_modules/@types",
      "./src/@types"
    ],
    "sourceMap": true,                                   /* Create source map files for emitted JavaScript files. */
    "outDir": "dist",                                   /* Specify an output folder for all emitted files. */
    "isolatedModules": true,                             /* Ensure that each file can be safely transpiled without relying on other imports. */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied `any` type. */
    "strictNullChecks": true,                            /* When type checking, take into account `null` and `undefined`. */
    "noUnusedLocals": true,                              /* Enable error reporting when a local variables aren't read. */
    "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read */
    "skipLibCheck": true                                /* Skip type checking all .d.ts files. */
  }
}
